name: Build Android APK (Fast Debug)

on:
  workflow_dispatch:

jobs:
  build-debug:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Flutter + Android SDK
      - name: Set up Flutter (with Android SDK, cached)
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.3'
          channel: 'stable'
          cache: true
          android: true

      # Java 17 cho AGP
      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # Cài SDK + accept licenses (không fail nếu Broken pipe)
      - name: Install Android SDK components
        shell: bash
        run: |
          echo "ANDROID_SDK_ROOT=${ANDROID_SDK_ROOT}"
          yes | "${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager" --licenses >/dev/null 2>&1 || true
          yes | "${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager" \
            "platform-tools" \
            "platforms;android-34" \
            "build-tools;34.0.0" >/dev/null 2>&1 || true
          "${ANDROID_SDK_ROOT}/platform-tools/adb" version || true

      # Cache Pub/Gradle
      - name: Cache Pub
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            android/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Flutter doctor
        run: flutter doctor -v

      - name: Install pub deps
        run: flutter pub get

      # Build bằng Gradle (log chi tiết)
      - name: Build with Gradle (assembleDebug)
        shell: bash
        run: |
          set -o pipefail
          pushd android
          ./gradlew --no-daemon clean assembleDebug --stacktrace --info | tee ../gradle_build.log
          popd

      # Build qua Flutter (fallback/so sánh)
      - name: Build debug APK via Flutter
        shell: bash
        run: |
          set -o pipefail
          flutter build apk --debug -v | tee flutter_build_debug.log

      # Liệt kê các APK tìm thấy (để bạn thấy đường dẫn chính xác)
      - name: Find APKs
        shell: bash
        run: |
          echo "=== APKs under repo ==="
          find . -type f -name "*.apk" -print -exec ls -lh {} \; || true
          echo "========================"

      # Upload APK từ CẢ 2 chỗ + logs (không có file → FAIL cho dễ bắt lỗi)
      - name: Upload APK + Logs
        uses: actions/upload-artifact@v4
        with:
          name: debug-output
          path: |
            android/app/build/outputs/apk/**/*.apk
            build/app/outputs/flutter-apk/*.apk
            gradle_build.log
            flutter_build_debug.log
          if-no-files-found: error
